Show MIR
DefId(0:6 ~ single_thread[da1f]::main)
_0:  @ () 
_1:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_2:  @ std::sync::Mutex<i32> 
_3:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_4:  @ std::sync::Mutex<i32> 
_5:  @ () 
_6:  @ std::sync::MutexGuard<ReErased, i32> 
_7:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_8:  @ &ReErased std::sync::Mutex<i32> 
_9:  @ &ReErased std::sync::Mutex<i32> 
_10:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_11:  @ &ReErased mut i32 
_12:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_13:  @ (i32, bool) 
_14:  @ () 
_15:  @ () 
_16:  @ std::fmt::Arguments<ReErased> 
_17:  @ &ReErased [&ReErased str] 
_18:  @ &ReErased [&ReErased str; 2_usize] 
_19:  @ &ReErased [&ReErased str; 2_usize] 
_20:  @ [&ReErased str; 2_usize] 
_21:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_22:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_23:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_24:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_25:  @ core::fmt::rt::Argument<ReErased> 
_26:  @ &ReErased i32 
_27:  @ &ReErased i32 
_28:  @ &ReErased i32 
_29:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_30:  @ () 
_31:  @ std::sync::MutexGuard<ReErased, i32> 
_32:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_33:  @ &ReErased std::sync::Mutex<i32> 
_34:  @ &ReErased std::sync::Mutex<i32> 
_35:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_36:  @ &ReErased mut i32 
_37:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_38:  @ (i32, bool) 
_39:  @ () 
_40:  @ () 
_41:  @ std::fmt::Arguments<ReErased> 
_42:  @ &ReErased [&ReErased str] 
_43:  @ &ReErased [&ReErased str; 2_usize] 
_44:  @ &ReErased [&ReErased str; 2_usize] 
_45:  @ [&ReErased str; 2_usize] 
_46:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_47:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_48:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_49:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_50:  @ core::fmt::rt::Argument<ReErased> 
_51:  @ &ReErased i32 
_52:  @ &ReErased i32 
_53:  @ &ReErased i32 
_54:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_55:  @ std::sync::MutexGuard<ReErased, i32> 
_56:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_57:  @ &ReErased std::sync::Mutex<i32> 
_58:  @ &ReErased std::sync::Mutex<i32> 
_59:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_60:  @ std::sync::MutexGuard<ReErased, i32> 
_61:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_62:  @ &ReErased std::sync::Mutex<i32> 
_63:  @ &ReErased std::sync::Mutex<i32> 
_64:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_65:  @ () 
_66:  @ &ReErased mut i32 
_67:  @ &ReErased mut i32 
_68:  @ &ReErased mut i32 
_69:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_70:  @ &ReErased mut i32 
_71:  @ &ReErased mut i32 
_72:  @ &ReErased mut i32 
_73:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_74:  @ () 
_75:  @ () 
_76:  @ std::fmt::Arguments<ReErased> 
_77:  @ &ReErased [&ReErased str] 
_78:  @ &ReErased [&ReErased str; 2_usize] 
_79:  @ &ReErased [&ReErased str; 2_usize] 
_80:  @ [&ReErased str; 2_usize] 
_81:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_82:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_83:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_84:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_85:  @ core::fmt::rt::Argument<ReErased> 
_86:  @ &ReErased i32 
_87:  @ &ReErased i32 
_88:  @ &ReErased i32 
_89:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_90:  @ () 
_91:  @ () 
_92:  @ std::fmt::Arguments<ReErased> 
_93:  @ &ReErased [&ReErased str] 
_94:  @ &ReErased [&ReErased str; 2_usize] 
_95:  @ &ReErased [&ReErased str; 2_usize] 
_96:  @ [&ReErased str; 2_usize] 
_97:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_98:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_99:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_100:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_101:  @ core::fmt::rt::Argument<ReErased> 
_102:  @ &ReErased i32 
_103:  @ &ReErased i32 
_104:  @ &ReErased i32 
_105:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 

[mutex1 => _1, mutex2 => _3, num1 => _6, num2 => _31, num1 => _55, num2 => _60]
bb 0 {
CleanUp: false
    StorageLive(_1) @ StorageLive
    StorageLive(_2) @ StorageLive
    _2 = std::sync::Mutex::<i32>::new(const 0_i32) -> [return: bb1, unwind: bb56] @ Call: FnDid: 6372
}
bb 1 {
CleanUp: false
    _1 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _2) -> [return: bb2, unwind: bb56] @ Call: FnDid: 6025
}
bb 2 {
CleanUp: false
    StorageDead(_2) @ StorageDead
    FakeRead((ForLet(None), _1)) @ FakeRead
    StorageLive(_3) @ StorageLive
    StorageLive(_4) @ StorageLive
    _4 = std::sync::Mutex::<i32>::new(const 0_i32) -> [return: bb3, unwind: bb55] @ Call: FnDid: 6372
}
bb 3 {
CleanUp: false
    _3 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _4) -> [return: bb4, unwind: bb55] @ Call: FnDid: 6025
}
bb 4 {
CleanUp: false
    StorageDead(_4) @ StorageDead
    FakeRead((ForLet(None), _3)) @ FakeRead
    StorageLive(_5) @ StorageLive
    StorageLive(_6) @ StorageLive
    StorageLive(_7) @ StorageLive
    StorageLive(_8) @ StorageLive
    StorageLive(_9) @ StorageLive
    StorageLive(_10) @ StorageLive
    Assign((_10, &_1)) @ _10=&_1 @ Ref
    _9 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _10) -> [return: bb5, unwind: bb54] @ Call: FnDid: 3101
}
bb 5 {
CleanUp: false
    Assign((_8, &(*_9))) @ _8=&(*_9) @ Ref
    StorageDead(_10) @ StorageDead
    _7 = std::sync::Mutex::<i32>::lock(move _8) -> [return: bb6, unwind: bb54] @ Call: FnDid: 6375
}
bb 6 {
CleanUp: false
    StorageDead(_8) @ StorageDead
    _6 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _7) -> [return: bb7, unwind: bb53] @ Call: FnDid: 9195
}
bb 7 {
CleanUp: false
    StorageDead(_7) @ StorageDead
    FakeRead((ForLet(None), _6)) @ FakeRead
    StorageDead(_9) @ StorageDead
    StorageLive(_11) @ StorageLive
    StorageLive(_12) @ StorageLive
    Assign((_12, &mut _6)) @ _12=&mut _6 @ Ref
    _11 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _12) -> [return: bb8, unwind: bb52] @ Call: FnDid: 3113
}
bb 8 {
CleanUp: false
    StorageDead(_12) @ StorageDead
    Assign((_13, CheckedAdd((*_11), const 10_i32))) @ _13=CheckedAdd((*_11), const 10_i32) @ CheckedBinaryOp
    assert(!move (_13.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_11), const 10_i32) -> [success: bb9, unwind: bb52] @ Assert
}
bb 9 {
CleanUp: false
    Assign(((*_11), move (_13.0: i32))) @ (*_11)=move (_13.0: i32) @ Use
    StorageDead(_11) @ StorageDead
    StorageLive(_14) @ StorageLive
    StorageLive(_15) @ StorageLive
    StorageLive(_16) @ StorageLive
    StorageLive(_17) @ StorageLive
    StorageLive(_18) @ StorageLive
    StorageLive(_19) @ StorageLive
    StorageLive(_20) @ StorageLive
    Assign((_20, [const "After incrementing, mutex1 holds: ", const "\n"])) @ _20=[const "After incrementing, mutex1 holds: ", const "\n"] @ Aggregate
    Assign((_19, &_20)) @ _19=&_20 @ Ref
    Assign((_18, &(*_19))) @ _18=&(*_19) @ Ref
    Assign((_17, move _18 as &[&str] (PointerCoercion(Unsize)))) @ _17=move _18 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_18) @ StorageDead
    StorageLive(_21) @ StorageLive
    StorageLive(_22) @ StorageLive
    StorageLive(_23) @ StorageLive
    StorageLive(_24) @ StorageLive
    StorageLive(_25) @ StorageLive
    StorageLive(_26) @ StorageLive
    StorageLive(_27) @ StorageLive
    StorageLive(_28) @ StorageLive
    StorageLive(_29) @ StorageLive
    Assign((_29, &_6)) @ _29=&_6 @ Ref
    _28 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _29) -> [return: bb10, unwind: bb52] @ Call: FnDid: 3101
}
bb 10 {
CleanUp: false
    StorageDead(_29) @ StorageDead
    Assign((_27, &(*_28))) @ _27=&(*_28) @ Ref
    Assign((_26, &(*_27))) @ _26=&(*_27) @ Ref
    _25 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _26) -> [return: bb11, unwind: bb52] @ Call: FnDid: 9786
}
bb 11 {
CleanUp: false
    StorageDead(_26) @ StorageDead
    Assign((_24, [move _25])) @ _24=[move _25] @ Aggregate
    StorageDead(_25) @ StorageDead
    Assign((_23, &_24)) @ _23=&_24 @ Ref
    Assign((_22, &(*_23))) @ _22=&(*_23) @ Ref
    Assign((_21, move _22 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _21=move _22 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_22) @ StorageDead
    _16 = std::fmt::Arguments::<'_>::new_v1(move _17, move _21) -> [return: bb12, unwind: bb52] @ Call: FnDid: 9866
}
bb 12 {
CleanUp: false
    StorageDead(_21) @ StorageDead
    StorageDead(_17) @ StorageDead
    _15 = std::io::_print(move _16) -> [return: bb13, unwind: bb52] @ Call: FnDid: 3326
}
bb 13 {
CleanUp: false
    StorageDead(_16) @ StorageDead
    StorageDead(_28) @ StorageDead
    StorageDead(_27) @ StorageDead
    StorageDead(_24) @ StorageDead
    StorageDead(_23) @ StorageDead
    StorageDead(_20) @ StorageDead
    StorageDead(_19) @ StorageDead
    StorageDead(_15) @ StorageDead
    Assign((_14, const ())) @ _14=const () @ Use
    StorageDead(_14) @ StorageDead
    Assign((_5, const ())) @ _5=const () @ Use
    drop(_6) -> [return: bb14, unwind: bb54] @ Drop
}
bb 14 {
CleanUp: false
    StorageDead(_6) @ StorageDead
    StorageDead(_5) @ StorageDead
    StorageLive(_30) @ StorageLive
    StorageLive(_31) @ StorageLive
    StorageLive(_32) @ StorageLive
    StorageLive(_33) @ StorageLive
    StorageLive(_34) @ StorageLive
    StorageLive(_35) @ StorageLive
    Assign((_35, &_3)) @ _35=&_3 @ Ref
    _34 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _35) -> [return: bb15, unwind: bb54] @ Call: FnDid: 3101
}
bb 15 {
CleanUp: false
    Assign((_33, &(*_34))) @ _33=&(*_34) @ Ref
    StorageDead(_35) @ StorageDead
    _32 = std::sync::Mutex::<i32>::lock(move _33) -> [return: bb16, unwind: bb54] @ Call: FnDid: 6375
}
bb 16 {
CleanUp: false
    StorageDead(_33) @ StorageDead
    _31 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _32) -> [return: bb17, unwind: bb51] @ Call: FnDid: 9195
}
bb 17 {
CleanUp: false
    StorageDead(_32) @ StorageDead
    FakeRead((ForLet(None), _31)) @ FakeRead
    StorageDead(_34) @ StorageDead
    StorageLive(_36) @ StorageLive
    StorageLive(_37) @ StorageLive
    Assign((_37, &mut _31)) @ _37=&mut _31 @ Ref
    _36 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _37) -> [return: bb18, unwind: bb50] @ Call: FnDid: 3113
}
bb 18 {
CleanUp: false
    StorageDead(_37) @ StorageDead
    Assign((_38, CheckedAdd((*_36), const 20_i32))) @ _38=CheckedAdd((*_36), const 20_i32) @ CheckedBinaryOp
    assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_36), const 20_i32) -> [success: bb19, unwind: bb50] @ Assert
}
bb 19 {
CleanUp: false
    Assign(((*_36), move (_38.0: i32))) @ (*_36)=move (_38.0: i32) @ Use
    StorageDead(_36) @ StorageDead
    StorageLive(_39) @ StorageLive
    StorageLive(_40) @ StorageLive
    StorageLive(_41) @ StorageLive
    StorageLive(_42) @ StorageLive
    StorageLive(_43) @ StorageLive
    StorageLive(_44) @ StorageLive
    StorageLive(_45) @ StorageLive
    Assign((_45, [const "After incrementing, mutex2 holds: ", const "\n"])) @ _45=[const "After incrementing, mutex2 holds: ", const "\n"] @ Aggregate
    Assign((_44, &_45)) @ _44=&_45 @ Ref
    Assign((_43, &(*_44))) @ _43=&(*_44) @ Ref
    Assign((_42, move _43 as &[&str] (PointerCoercion(Unsize)))) @ _42=move _43 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_43) @ StorageDead
    StorageLive(_46) @ StorageLive
    StorageLive(_47) @ StorageLive
    StorageLive(_48) @ StorageLive
    StorageLive(_49) @ StorageLive
    StorageLive(_50) @ StorageLive
    StorageLive(_51) @ StorageLive
    StorageLive(_52) @ StorageLive
    StorageLive(_53) @ StorageLive
    StorageLive(_54) @ StorageLive
    Assign((_54, &_31)) @ _54=&_31 @ Ref
    _53 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _54) -> [return: bb20, unwind: bb50] @ Call: FnDid: 3101
}
bb 20 {
CleanUp: false
    StorageDead(_54) @ StorageDead
    Assign((_52, &(*_53))) @ _52=&(*_53) @ Ref
    Assign((_51, &(*_52))) @ _51=&(*_52) @ Ref
    _50 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _51) -> [return: bb21, unwind: bb50] @ Call: FnDid: 9786
}
bb 21 {
CleanUp: false
    StorageDead(_51) @ StorageDead
    Assign((_49, [move _50])) @ _49=[move _50] @ Aggregate
    StorageDead(_50) @ StorageDead
    Assign((_48, &_49)) @ _48=&_49 @ Ref
    Assign((_47, &(*_48))) @ _47=&(*_48) @ Ref
    Assign((_46, move _47 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _46=move _47 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_47) @ StorageDead
    _41 = std::fmt::Arguments::<'_>::new_v1(move _42, move _46) -> [return: bb22, unwind: bb50] @ Call: FnDid: 9866
}
bb 22 {
CleanUp: false
    StorageDead(_46) @ StorageDead
    StorageDead(_42) @ StorageDead
    _40 = std::io::_print(move _41) -> [return: bb23, unwind: bb50] @ Call: FnDid: 3326
}
bb 23 {
CleanUp: false
    StorageDead(_41) @ StorageDead
    StorageDead(_53) @ StorageDead
    StorageDead(_52) @ StorageDead
    StorageDead(_49) @ StorageDead
    StorageDead(_48) @ StorageDead
    StorageDead(_45) @ StorageDead
    StorageDead(_44) @ StorageDead
    StorageDead(_40) @ StorageDead
    Assign((_39, const ())) @ _39=const () @ Use
    StorageDead(_39) @ StorageDead
    Assign((_30, const ())) @ _30=const () @ Use
    drop(_31) -> [return: bb24, unwind: bb54] @ Drop
}
bb 24 {
CleanUp: false
    StorageDead(_31) @ StorageDead
    StorageDead(_30) @ StorageDead
    StorageLive(_55) @ StorageLive
    StorageLive(_56) @ StorageLive
    StorageLive(_57) @ StorageLive
    StorageLive(_58) @ StorageLive
    StorageLive(_59) @ StorageLive
    Assign((_59, &_1)) @ _59=&_1 @ Ref
    _58 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _59) -> [return: bb25, unwind: bb54] @ Call: FnDid: 3101
}
bb 25 {
CleanUp: false
    Assign((_57, &(*_58))) @ _57=&(*_58) @ Ref
    StorageDead(_59) @ StorageDead
    _56 = std::sync::Mutex::<i32>::lock(move _57) -> [return: bb26, unwind: bb54] @ Call: FnDid: 6375
}
bb 26 {
CleanUp: false
    StorageDead(_57) @ StorageDead
    _55 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _56) -> [return: bb27, unwind: bb49] @ Call: FnDid: 9195
}
bb 27 {
CleanUp: false
    StorageDead(_56) @ StorageDead
    FakeRead((ForLet(None), _55)) @ FakeRead
    StorageDead(_58) @ StorageDead
    StorageLive(_60) @ StorageLive
    StorageLive(_61) @ StorageLive
    StorageLive(_62) @ StorageLive
    StorageLive(_63) @ StorageLive
    StorageLive(_64) @ StorageLive
    Assign((_64, &_3)) @ _64=&_3 @ Ref
    _63 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _64) -> [return: bb28, unwind: bb48] @ Call: FnDid: 3101
}
bb 28 {
CleanUp: false
    Assign((_62, &(*_63))) @ _62=&(*_63) @ Ref
    StorageDead(_64) @ StorageDead
    _61 = std::sync::Mutex::<i32>::lock(move _62) -> [return: bb29, unwind: bb48] @ Call: FnDid: 6375
}
bb 29 {
CleanUp: false
    StorageDead(_62) @ StorageDead
    _60 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _61) -> [return: bb30, unwind: bb47] @ Call: FnDid: 9195
}
bb 30 {
CleanUp: false
    StorageDead(_61) @ StorageDead
    FakeRead((ForLet(None), _60)) @ FakeRead
    StorageDead(_63) @ StorageDead
    StorageLive(_65) @ StorageLive
    StorageLive(_66) @ StorageLive
    StorageLive(_67) @ StorageLive
    StorageLive(_68) @ StorageLive
    StorageLive(_69) @ StorageLive
    Assign((_69, &mut _55)) @ _69=&mut _55 @ Ref
    _68 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _69) -> [return: bb31, unwind: bb46] @ Call: FnDid: 3113
}
bb 31 {
CleanUp: false
    StorageDead(_69) @ StorageDead
    Assign((_67, &mut (*_68))) @ _67=&mut (*_68) @ Ref
    Assign((_66, &mut (*_67))) @ _66=&mut (*_67) @ Ref
    StorageLive(_70) @ StorageLive
    StorageLive(_71) @ StorageLive
    StorageLive(_72) @ StorageLive
    StorageLive(_73) @ StorageLive
    Assign((_73, &mut _60)) @ _73=&mut _60 @ Ref
    _72 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _73) -> [return: bb32, unwind: bb46] @ Call: FnDid: 3113
}
bb 32 {
CleanUp: false
    StorageDead(_73) @ StorageDead
    Assign((_71, &mut (*_72))) @ _71=&mut (*_72) @ Ref
    Assign((_70, &mut (*_71))) @ _70=&mut (*_71) @ Ref
    _65 = std::mem::swap::<i32>(move _66, move _70) -> [return: bb33, unwind: bb46] @ Call: FnDid: 1770
}
bb 33 {
CleanUp: false
    StorageDead(_70) @ StorageDead
    StorageDead(_66) @ StorageDead
    StorageDead(_72) @ StorageDead
    StorageDead(_71) @ StorageDead
    StorageDead(_68) @ StorageDead
    StorageDead(_67) @ StorageDead
    StorageDead(_65) @ StorageDead
    StorageLive(_74) @ StorageLive
    StorageLive(_75) @ StorageLive
    StorageLive(_76) @ StorageLive
    StorageLive(_77) @ StorageLive
    StorageLive(_78) @ StorageLive
    StorageLive(_79) @ StorageLive
    StorageLive(_80) @ StorageLive
    Assign((_80, [const "After swapping, mutex1 holds: ", const "\n"])) @ _80=[const "After swapping, mutex1 holds: ", const "\n"] @ Aggregate
    Assign((_79, &_80)) @ _79=&_80 @ Ref
    Assign((_78, &(*_79))) @ _78=&(*_79) @ Ref
    Assign((_77, move _78 as &[&str] (PointerCoercion(Unsize)))) @ _77=move _78 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_78) @ StorageDead
    StorageLive(_81) @ StorageLive
    StorageLive(_82) @ StorageLive
    StorageLive(_83) @ StorageLive
    StorageLive(_84) @ StorageLive
    StorageLive(_85) @ StorageLive
    StorageLive(_86) @ StorageLive
    StorageLive(_87) @ StorageLive
    StorageLive(_88) @ StorageLive
    StorageLive(_89) @ StorageLive
    Assign((_89, &_55)) @ _89=&_55 @ Ref
    _88 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _89) -> [return: bb34, unwind: bb46] @ Call: FnDid: 3101
}
bb 34 {
CleanUp: false
    StorageDead(_89) @ StorageDead
    Assign((_87, &(*_88))) @ _87=&(*_88) @ Ref
    Assign((_86, &(*_87))) @ _86=&(*_87) @ Ref
    _85 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _86) -> [return: bb35, unwind: bb46] @ Call: FnDid: 9786
}
bb 35 {
CleanUp: false
    StorageDead(_86) @ StorageDead
    Assign((_84, [move _85])) @ _84=[move _85] @ Aggregate
    StorageDead(_85) @ StorageDead
    Assign((_83, &_84)) @ _83=&_84 @ Ref
    Assign((_82, &(*_83))) @ _82=&(*_83) @ Ref
    Assign((_81, move _82 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _81=move _82 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_82) @ StorageDead
    _76 = std::fmt::Arguments::<'_>::new_v1(move _77, move _81) -> [return: bb36, unwind: bb46] @ Call: FnDid: 9866
}
bb 36 {
CleanUp: false
    StorageDead(_81) @ StorageDead
    StorageDead(_77) @ StorageDead
    _75 = std::io::_print(move _76) -> [return: bb37, unwind: bb46] @ Call: FnDid: 3326
}
bb 37 {
CleanUp: false
    StorageDead(_76) @ StorageDead
    StorageDead(_88) @ StorageDead
    StorageDead(_87) @ StorageDead
    StorageDead(_84) @ StorageDead
    StorageDead(_83) @ StorageDead
    StorageDead(_80) @ StorageDead
    StorageDead(_79) @ StorageDead
    StorageDead(_75) @ StorageDead
    Assign((_74, const ())) @ _74=const () @ Use
    StorageDead(_74) @ StorageDead
    StorageLive(_90) @ StorageLive
    StorageLive(_91) @ StorageLive
    StorageLive(_92) @ StorageLive
    StorageLive(_93) @ StorageLive
    StorageLive(_94) @ StorageLive
    StorageLive(_95) @ StorageLive
    StorageLive(_96) @ StorageLive
    Assign((_96, [const "After swapping, mutex2 holds: ", const "\n"])) @ _96=[const "After swapping, mutex2 holds: ", const "\n"] @ Aggregate
    Assign((_95, &_96)) @ _95=&_96 @ Ref
    Assign((_94, &(*_95))) @ _94=&(*_95) @ Ref
    Assign((_93, move _94 as &[&str] (PointerCoercion(Unsize)))) @ _93=move _94 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_94) @ StorageDead
    StorageLive(_97) @ StorageLive
    StorageLive(_98) @ StorageLive
    StorageLive(_99) @ StorageLive
    StorageLive(_100) @ StorageLive
    StorageLive(_101) @ StorageLive
    StorageLive(_102) @ StorageLive
    StorageLive(_103) @ StorageLive
    StorageLive(_104) @ StorageLive
    StorageLive(_105) @ StorageLive
    Assign((_105, &_60)) @ _105=&_60 @ Ref
    _104 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _105) -> [return: bb38, unwind: bb46] @ Call: FnDid: 3101
}
bb 38 {
CleanUp: false
    StorageDead(_105) @ StorageDead
    Assign((_103, &(*_104))) @ _103=&(*_104) @ Ref
    Assign((_102, &(*_103))) @ _102=&(*_103) @ Ref
    _101 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _102) -> [return: bb39, unwind: bb46] @ Call: FnDid: 9786
}
bb 39 {
CleanUp: false
    StorageDead(_102) @ StorageDead
    Assign((_100, [move _101])) @ _100=[move _101] @ Aggregate
    StorageDead(_101) @ StorageDead
    Assign((_99, &_100)) @ _99=&_100 @ Ref
    Assign((_98, &(*_99))) @ _98=&(*_99) @ Ref
    Assign((_97, move _98 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _97=move _98 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_98) @ StorageDead
    _92 = std::fmt::Arguments::<'_>::new_v1(move _93, move _97) -> [return: bb40, unwind: bb46] @ Call: FnDid: 9866
}
bb 40 {
CleanUp: false
    StorageDead(_97) @ StorageDead
    StorageDead(_93) @ StorageDead
    _91 = std::io::_print(move _92) -> [return: bb41, unwind: bb46] @ Call: FnDid: 3326
}
bb 41 {
CleanUp: false
    StorageDead(_92) @ StorageDead
    StorageDead(_104) @ StorageDead
    StorageDead(_103) @ StorageDead
    StorageDead(_100) @ StorageDead
    StorageDead(_99) @ StorageDead
    StorageDead(_96) @ StorageDead
    StorageDead(_95) @ StorageDead
    StorageDead(_91) @ StorageDead
    Assign((_90, const ())) @ _90=const () @ Use
    StorageDead(_90) @ StorageDead
    Assign((_0, const ())) @ _0=const () @ Use
    drop(_60) -> [return: bb42, unwind: bb48] @ Drop
}
bb 42 {
CleanUp: false
    StorageDead(_60) @ StorageDead
    drop(_55) -> [return: bb43, unwind: bb54] @ Drop
}
bb 43 {
CleanUp: false
    StorageDead(_55) @ StorageDead
    drop(_3) -> [return: bb44, unwind: bb55] @ Drop
}
bb 44 {
CleanUp: false
    StorageDead(_3) @ StorageDead
    drop(_1) -> [return: bb45, unwind: bb56] @ Drop
}
bb 45 {
CleanUp: false
    StorageDead(_1) @ StorageDead
    return @ Return
}
bb 46 {
CleanUp: true
    drop(_60) -> [return: bb48, unwind terminate(cleanup)] @ Drop
}
bb 47 {
CleanUp: true
    drop(_61) -> [return: bb48, unwind terminate(cleanup)] @ Drop
}
bb 48 {
CleanUp: true
    drop(_55) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 49 {
CleanUp: true
    drop(_56) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 50 {
CleanUp: true
    drop(_31) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 51 {
CleanUp: true
    drop(_32) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 52 {
CleanUp: true
    drop(_6) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 53 {
CleanUp: true
    drop(_7) -> [return: bb54, unwind terminate(cleanup)] @ Drop
}
bb 54 {
CleanUp: true
    drop(_3) -> [return: bb55, unwind terminate(cleanup)] @ Drop
}
bb 55 {
CleanUp: true
    drop(_1) -> [return: bb56, unwind terminate(cleanup)] @ Drop
}
bb 56 {
CleanUp: true
    resume @ UnwindResume
}

