Show MIR
DefId(0:7 ~ double_lock_1[39a8]::main)
_0:  @ () 
_1:  @ std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global> 
_2:  @ std::sync::Mutex<u32> 
_3:  @ std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global> 
_4:  @ &ReErased std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global> 
_5:  @ std::sync::MutexGuard<ReErased, u32> 
_6:  @ std::result::Result<std::sync::MutexGuard<ReErased, u32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, u32>>> 
_7:  @ &ReErased std::sync::Mutex<u32> 
_8:  @ &ReErased std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global> 
_9:  @ () 
_10:  @ &ReErased std::sync::Mutex<u32> 
_11:  @ &ReErased std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global> 

[mutex => _1, mutex_clone => _3, mu1 => _5]
bb 0 {
CleanUp: false
    _2 = std::sync::Mutex::<u32>::new(const 0_u32) -> [return: bb1, unwind continue] @ Call: FnDid: 6372, args: [u32]
}
bb 1 {
CleanUp: false
    _1 = std::sync::Arc::<std::sync::Mutex<u32>>::new(move _2) -> [return: bb2, unwind continue] @ Call: FnDid: 6025, args: [std::sync::Mutex<u32>]
}
bb 2 {
CleanUp: false
    Assign((_4, &_1)) @ _4=&_1 @ RefThe type is []
    _3 = <std::sync::Arc<std::sync::Mutex<u32>> as std::clone::Clone>::clone(_4) -> [return: bb3, unwind: bb14] @ Call: FnDid: 2441, args: [std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global>]
}
bb 3 {
CleanUp: false
    Assign((_8, &_1)) @ _8=&_1 @ RefThe type is []
    _7 = <std::sync::Arc<std::sync::Mutex<u32>> as std::ops::Deref>::deref(move _8) -> [return: bb4, unwind: bb13] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global>]
}
bb 4 {
CleanUp: false
    _6 = std::sync::Mutex::<u32>::lock(_7) -> [return: bb5, unwind: bb13] @ Call: FnDid: 6375, args: [u32]
}
bb 5 {
CleanUp: false
    _5 = std::result::Result::<std::sync::MutexGuard<'_, u32>, std::sync::PoisonError<std::sync::MutexGuard<'_, u32>>>::unwrap(move _6) -> [return: bb6, unwind: bb13] @ Call: FnDid: 9195, args: [std::sync::MutexGuard<ReErased, u32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, u32>>]
}
bb 6 {
CleanUp: false
    Assign((_11, &_3)) @ _11=&_3 @ RefThe type is []
    _10 = <std::sync::Arc<std::sync::Mutex<u32>> as std::ops::Deref>::deref(_11) -> [return: bb7, unwind: bb12] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<u32>, std::alloc::Global>]
}
bb 7 {
CleanUp: false
    _9 = get_lock(_10) -> [return: bb8, unwind: bb12] @ Call: FnDid: 8, args: []
}
bb 8 {
CleanUp: false
    drop(_5) -> [return: bb9, unwind: bb13] @ Drop
}
bb 9 {
CleanUp: false
    drop(_3) -> [return: bb10, unwind: bb14] @ Drop
}
bb 10 {
CleanUp: false
    drop(_1) -> [return: bb11, unwind continue] @ Drop
}
bb 11 {
CleanUp: false
    return @ Return
}
bb 12 {
CleanUp: true
    drop(_5) -> [return: bb13, unwind terminate(cleanup)] @ Drop
}
bb 13 {
CleanUp: true
    drop(_3) -> [return: bb14, unwind terminate(cleanup)] @ Drop
}
bb 14 {
CleanUp: true
    drop(_1) -> [return: bb15, unwind terminate(cleanup)] @ Drop
}
bb 15 {
CleanUp: true
    resume @ UnwindResume
}

DefId(0:8 ~ double_lock_1[39a8]::get_lock)
_0:  @ () 
_1:  @ &ReErased std::sync::Mutex<u32> 
_2:  @ std::sync::MutexGuard<ReErased, u32> 
_3:  @ std::result::Result<std::sync::MutexGuard<ReErased, u32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, u32>>> 

[lock => _1, mu2 => _2]
bb 0 {
CleanUp: false
    _3 = std::sync::Mutex::<u32>::lock(_1) -> [return: bb1, unwind continue] @ Call: FnDid: 6375, args: [u32]
}
bb 1 {
CleanUp: false
    _2 = std::result::Result::<std::sync::MutexGuard<'_, u32>, std::sync::PoisonError<std::sync::MutexGuard<'_, u32>>>::unwrap(move _3) -> [return: bb2, unwind continue] @ Call: FnDid: 9195, args: [std::sync::MutexGuard<ReErased, u32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, u32>>]
}
bb 2 {
CleanUp: false
    drop(_2) -> [return: bb3, unwind continue] @ Drop
}
bb 3 {
CleanUp: false
    return @ Return
}

