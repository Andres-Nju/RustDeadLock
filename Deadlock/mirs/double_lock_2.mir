Show MIR
DefId(0:7 ~ double_lock_2[94cd]::main)
_0:  @ () 
_1:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_2:  @ std::sync::Mutex<i32> 
_3:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_4:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_5:  @ std::sync::MutexGuard<ReErased, i32> 
_6:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_7:  @ &ReErased std::sync::Mutex<i32> 
_8:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_9:  @ () 
_10:  @ std::fmt::Arguments<ReErased> 
_11:  @ &ReErased [&ReErased str] 
_12:  @ std::thread::JoinHandle<()> 
_13:  @ Closure(DefId(0:8 ~ double_lock_2[94cd]::main::{closure#0}), [i32, Binder(extern "RustCall" fn(()), []), (std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>,)]) 
_14:  @ () 
_15:  @ std::result::Result<(), std::boxed::Box<dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:32445 ~ core[0c3f]::marker::Send)), [])] + ReErased, std::alloc::Global>> 
_16:  @ &ReErased [&ReErased str; 1_usize] 
_17:  @ bool 

[mutex => _1, mutex_clone => _3, _lock1 => _5, handle => _12]
bb 0 {
CleanUp: false
    Assign((_17, const false)) @ _17=const false @ Use
    _2 = std::sync::Mutex::<i32>::new(const 0_i32) -> [return: bb1, unwind continue] @ Call: FnDid: 6372, args: [i32]
}
bb 1 {
CleanUp: false
    _1 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _2) -> [return: bb2, unwind continue] @ Call: FnDid: 6025, args: [std::sync::Mutex<i32>]
}
bb 2 {
CleanUp: false
    Assign((_4, &_1)) @ _4=&_1 @ RefThe type is []
    _3 = <std::sync::Arc<std::sync::Mutex<i32>> as std::clone::Clone>::clone(_4) -> [return: bb3, unwind: bb15] @ Call: FnDid: 2441, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 3 {
CleanUp: false
    Assign((_17, const true)) @ _17=const true @ Use
    Assign((_8, &_1)) @ _8=&_1 @ RefThe type is []
    _7 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _8) -> [return: bb4, unwind: bb18] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 4 {
CleanUp: false
    _6 = std::sync::Mutex::<i32>::lock(_7) -> [return: bb5, unwind: bb18] @ Call: FnDid: 6375, args: [i32]
}
bb 5 {
CleanUp: false
    _5 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _6) -> [return: bb6, unwind: bb18] @ Call: FnDid: 9195, args: [std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>]
}
bb 6 {
CleanUp: false
    Assign((_16, const _)) @ _16=const _ @ Use
    Assign((_11, _16 as &[&str] (PointerCoercion(Unsize)))) @ _11=_16 as &[&str] (PointerCoercion(Unsize)) @ Cast
    _10 = std::fmt::Arguments::<'_>::new_const(move _11) -> [return: bb7, unwind: bb14] @ Call: FnDid: 9865, args: [ReErased, true]
}
bb 7 {
CleanUp: false
    _9 = std::io::_print(move _10) -> [return: bb8, unwind: bb14] @ Call: FnDid: 3326, args: []
}
bb 8 {
CleanUp: false
    Assign((_17, const false)) @ _17=const false @ Use
    Assign((_13, {closure@test/double_lock_2.rs:10:32: 10:39} { mutex_clone: move _3 })) @ _13={closure@test/double_lock_2.rs:10:32: 10:39} { mutex_clone: move _3 } @ Aggregate
    _12 = std::thread::spawn::<{closure@test/double_lock_2.rs:10:32: 10:39}, ()>(move _13) -> [return: bb9, unwind: bb14] @ Call: FnDid: 495, args: [Closure(DefId(0:8 ~ double_lock_2[94cd]::main::{closure#0}), [i32, Binder(extern "RustCall" fn(()), []), (std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>,)]), ()]
}
bb 9 {
CleanUp: false
    _15 = std::thread::JoinHandle::<()>::join(move _12) -> [return: bb10, unwind: bb14] @ Call: FnDid: 568, args: [()]
}
bb 10 {
CleanUp: false
    _14 = std::result::Result::<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>::unwrap(move _15) -> [return: bb11, unwind: bb14] @ Call: FnDid: 9195, args: [(), std::boxed::Box<dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:32445 ~ core[0c3f]::marker::Send)), [])] + ReErased, std::alloc::Global>]
}
bb 11 {
CleanUp: false
    drop(_5) -> [return: bb12, unwind: bb18] @ Drop
}
bb 12 {
CleanUp: false
    Assign((_17, const false)) @ _17=const false @ Use
    drop(_1) -> [return: bb13, unwind continue] @ Drop
}
bb 13 {
CleanUp: false
    return @ Return
}
bb 14 {
CleanUp: true
    drop(_5) -> [return: bb18, unwind terminate(cleanup)] @ Drop
}
bb 15 {
CleanUp: true
    drop(_1) -> [return: bb16, unwind terminate(cleanup)] @ Drop
}
bb 16 {
CleanUp: true
    resume @ UnwindResume
}
bb 17 {
CleanUp: true
    drop(_3) -> [return: bb15, unwind terminate(cleanup)] @ Drop
}
bb 18 {
CleanUp: true
    switchInt(_17) -> [0: bb15, otherwise: bb17] @ SwitchInt
}

DefId(0:8 ~ double_lock_2[94cd]::main::{closure#0})
_0:  @ () 
_1:  @ Closure(DefId(0:8 ~ double_lock_2[94cd]::main::{closure#0}), [i32, Binder(extern "RustCall" fn(()), []), (std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>,)]) 
_2:  @ std::sync::MutexGuard<ReErased, i32> 
_3:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_4:  @ &ReErased std::sync::Mutex<i32> 
_5:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_6:  @ () 
_7:  @ std::fmt::Arguments<ReErased> 
_8:  @ &ReErased [&ReErased str] 
_9:  @ &ReErased [&ReErased str; 1_usize] 

[mutex_clone => (_1.0: std::sync::Arc<std::sync::Mutex<i32>>), _lock2 => _2]
bb 0 {
CleanUp: false
    Assign((_5, &(_1.0: std::sync::Arc<std::sync::Mutex<i32>>))) @ _5=&(_1.0: std::sync::Arc<std::sync::Mutex<i32>>) @ RefThe type is [Field(0, std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>)]
    _4 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _5) -> [return: bb1, unwind: bb9] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 1 {
CleanUp: false
    _3 = std::sync::Mutex::<i32>::lock(_4) -> [return: bb2, unwind: bb9] @ Call: FnDid: 6375, args: [i32]
}
bb 2 {
CleanUp: false
    _2 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _3) -> [return: bb3, unwind: bb9] @ Call: FnDid: 9195, args: [std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>]
}
bb 3 {
CleanUp: false
    Assign((_9, const _)) @ _9=const _ @ Use
    Assign((_8, _9 as &[&str] (PointerCoercion(Unsize)))) @ _8=_9 as &[&str] (PointerCoercion(Unsize)) @ Cast
    _7 = std::fmt::Arguments::<'_>::new_const(move _8) -> [return: bb4, unwind: bb8] @ Call: FnDid: 9865, args: [ReErased, true]
}
bb 4 {
CleanUp: false
    _6 = std::io::_print(move _7) -> [return: bb5, unwind: bb8] @ Call: FnDid: 3326, args: []
}
bb 5 {
CleanUp: false
    drop(_2) -> [return: bb6, unwind: bb9] @ Drop
}
bb 6 {
CleanUp: false
    drop(_1) -> [return: bb7, unwind continue] @ Drop
}
bb 7 {
CleanUp: false
    return @ Return
}
bb 8 {
CleanUp: true
    drop(_2) -> [return: bb9, unwind terminate(cleanup)] @ Drop
}
bb 9 {
CleanUp: true
    drop(_1) -> [return: bb10, unwind terminate(cleanup)] @ Drop
}
bb 10 {
CleanUp: true
    resume @ UnwindResume
}

