DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price)
_0:  @ std::result::Result<bool, &ReErased str> 
_1:  @ &ReErased Miner 
_2:  @ u32 
_3:  @ &ReErased GasPricer 
_4:  @ &ReErased std::sync::MutexGuard<ReErased, GasPricer> 
_5:  @ std::sync::MutexGuard<ReErased, GasPricer> 
_6:  @ std::result::Result<std::sync::MutexGuard<ReErased, GasPricer>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, GasPricer>>> 
_7:  @ &ReErased std::sync::Mutex<GasPricer> 
_8:  @ isize 
_9:  @ () 
_10:  @ &ReErased mut GasPricer 
_11:  @ &ReErased mut std::sync::MutexGuard<ReErased, GasPricer> 
_12:  @ std::sync::MutexGuard<ReErased, GasPricer> 
_13:  @ std::result::Result<std::sync::MutexGuard<ReErased, GasPricer>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, GasPricer>>> 
_14:  @ &ReErased std::sync::Mutex<GasPricer> 
_15:  @ &ReErased str 

[self => _1, new_price => _2]
bb 0 {
CleanUp: false
    Assign((_7, &((*_1).0: std::sync::Mutex<GasPricer>))) @ _7=&((*_1).0: std::sync::Mutex<GasPricer>) @ RefThe type is [Deref, Field(0, std::sync::Mutex<GasPricer>)]
    _6 = std::sync::Mutex::<GasPricer>::lock(move _7) -> [return: bb1, unwind continue] @ Call: FnDid: DefId(1:6375 ~ std[2f0b]::sync::mutex::{impl#5}::lock)
}
bb 1 {
CleanUp: false
    _5 = std::result::Result::<std::sync::MutexGuard<'_, GasPricer>, std::sync::PoisonError<std::sync::MutexGuard<'_, GasPricer>>>::unwrap(move _6) -> [return: bb2, unwind continue] @ Call: FnDid: DefId(2:9195 ~ core[0c3f]::result::{impl#0}::unwrap)
}
bb 2 {
CleanUp: false
    Assign((_4, &_5)) @ _4=&_5 @ RefThe type is []
    _3 = <std::sync::MutexGuard<'_, GasPricer> as std::ops::Deref>::deref(move _4) -> [return: bb3, unwind: bb14] @ Call: FnDid: DefId(2:3101 ~ core[0c3f]::ops::deref::Deref::deref)
}
bb 3 {
CleanUp: false
    Assign((_8, discriminant((*_3)))) @ _8=discriminant((*_3)) @ Discriminant
    switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb16] @ SwitchInt
}
bb 4 {
CleanUp: false
    Assign((_15, const "Gas pricer already calibrated")) @ _15=const "Gas pricer already calibrated" @ Use Constant
    Assign((_0, std::result::Result::<bool, &str>::Err(_15))) @ _0=std::result::Result::<bool, &str>::Err(_15) @ Aggregate
    goto -> bb11 @ Goto
}
bb 5 {
CleanUp: false
    Assign((_14, &((*_1).0: std::sync::Mutex<GasPricer>))) @ _14=&((*_1).0: std::sync::Mutex<GasPricer>) @ RefThe type is [Deref, Field(0, std::sync::Mutex<GasPricer>)]
    _13 = std::sync::Mutex::<GasPricer>::lock(move _14) -> [return: bb6, unwind: bb14] @ Call: FnDid: DefId(1:6375 ~ std[2f0b]::sync::mutex::{impl#5}::lock)
}
bb 6 {
CleanUp: false
    _12 = std::result::Result::<std::sync::MutexGuard<'_, GasPricer>, std::sync::PoisonError<std::sync::MutexGuard<'_, GasPricer>>>::unwrap(move _13) -> [return: bb7, unwind: bb14] @ Call: FnDid: DefId(2:9195 ~ core[0c3f]::result::{impl#0}::unwrap)
}
bb 7 {
CleanUp: false
    Assign((_11, &mut _12)) @ _11=&mut _12 @ RefThe type is []
    _10 = <std::sync::MutexGuard<'_, GasPricer> as std::ops::DerefMut>::deref_mut(move _11) -> [return: bb8, unwind: bb13] @ Call: FnDid: DefId(2:3113 ~ core[0c3f]::ops::deref::DerefMut::deref_mut)
}
bb 8 {
CleanUp: false
    _9 = GasPricer::recalibrate(_10) -> [return: bb9, unwind: bb13] @ Call: FnDid: DefId(0:18 ~ dl_2_field[256e]::{impl#1}::recalibrate)
}
bb 9 {
CleanUp: false
    drop(_12) -> [return: bb10, unwind: bb14] @ Drop
}
bb 10 {
CleanUp: false
    Assign((_0, std::result::Result::<bool, &str>::Ok(const true))) @ _0=std::result::Result::<bool, &str>::Ok(const true) @ Aggregate
    goto -> bb11 @ Goto
}
bb 11 {
CleanUp: false
    drop(_5) -> [return: bb12, unwind continue] @ Drop
}
bb 12 {
CleanUp: false
    return @ Return
}
bb 13 {
CleanUp: true
    drop(_12) -> [return: bb14, unwind terminate(cleanup)] @ Drop
}
bb 14 {
CleanUp: true
    drop(_5) -> [return: bb15, unwind terminate(cleanup)] @ Drop
}
bb 15 {
CleanUp: true
    resume @ UnwindResume
}
bb 16 {
CleanUp: false
    unreachable @ Unreachable
}

DefId(0:18 ~ dl_2_field[256e]::{impl#1}::recalibrate)
_0:  @ () 
_1:  @ &ReErased mut GasPricer 
_2:  @ isize 

[self => _1]
bb 0 {
CleanUp: false
    Assign((_2, discriminant((*_1)))) @ _2=discriminant((*_1)) @ Discriminant
    switchInt(move _2) -> [0: bb1, 1: bb1, otherwise: bb2] @ SwitchInt
}
bb 1 {
CleanUp: false
    return @ Return
}
bb 2 {
CleanUp: false
    unreachable @ Unreachable
}

DefId(0:19 ~ dl_2_field[256e]::main)
_0:  @ () 
_1:  @ Miner 
_2:  @ std::sync::Mutex<GasPricer> 
_3:  @ GasPricer 
_4:  @ std::result::Result<bool, &ReErased str> 
_5:  @ &ReErased Miner 
_6:  @ isize 
_7:  @ () 
_8:  @ std::fmt::Arguments<ReErased> 
_9:  @ &ReErased [&ReErased str] 
_10:  @ () 
_11:  @ std::fmt::Arguments<ReErased> 
_12:  @ &ReErased [&ReErased str] 
_13:  @ &ReErased [&ReErased str; 1_usize] 
_14:  @ &ReErased [&ReErased str; 1_usize] 

[miner => _1]
bb 0 {
CleanUp: false
    Assign((_3, GasPricer::Fixed(const 100_u32))) @ _3=GasPricer::Fixed(const 100_u32) @ Aggregate
    _2 = std::sync::Mutex::<GasPricer>::new(move _3) -> [return: bb1, unwind continue] @ Call: FnDid: DefId(1:6372 ~ std[2f0b]::sync::mutex::{impl#4}::new)
}
bb 1 {
CleanUp: false
    Assign((_1, Miner { gas_pricer: move _2 })) @ _1=Miner { gas_pricer: move _2 } @ Aggregate
    Assign((_5, &_1)) @ _5=&_1 @ RefThe type is []
    _4 = Miner::set_minimal_gas_price(move _5, const 200_u32) -> [return: bb2, unwind continue] @ Call: FnDid: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price)
}
bb 2 {
CleanUp: false
    Assign((_6, discriminant(_4))) @ _6=discriminant(_4) @ Discriminant
    switchInt(move _6) -> [0: bb4, 1: bb3, otherwise: bb8] @ SwitchInt
}
bb 3 {
CleanUp: false
    Assign((_13, const _)) @ _13=const _ @ Use Constant
    Assign((_12, _13 as &[&str] (PointerCoercion(Unsize)))) @ _12=_13 as &[&str] (PointerCoercion(Unsize)) @ Cast
    _11 = std::fmt::Arguments::<'_>::new_const(move _12) -> [return: bb6, unwind continue] @ Call: FnDid: DefId(2:9865 ~ core[0c3f]::fmt::{impl#2}::new_const)
}
bb 4 {
CleanUp: false
    Assign((_14, const _)) @ _14=const _ @ Use Constant
    Assign((_9, _14 as &[&str] (PointerCoercion(Unsize)))) @ _9=_14 as &[&str] (PointerCoercion(Unsize)) @ Cast
    _8 = std::fmt::Arguments::<'_>::new_const(move _9) -> [return: bb5, unwind continue] @ Call: FnDid: DefId(2:9865 ~ core[0c3f]::fmt::{impl#2}::new_const)
}
bb 5 {
CleanUp: false
    _7 = std::io::_print(move _8) -> [return: bb7, unwind continue] @ Call: FnDid: DefId(1:3326 ~ std[2f0b]::io::stdio::_print)
}
bb 6 {
CleanUp: false
    _10 = std::io::_print(move _11) -> [return: bb7, unwind continue] @ Call: FnDid: DefId(1:3326 ~ std[2f0b]::io::stdio::_print)
}
bb 7 {
CleanUp: false
    return @ Return
}
bb 8 {
CleanUp: false
    unreachable @ Unreachable
}

DefId(0:8 ~ dl_2_field[256e]::GasPricer::Fixed::{constructor#0})
_0:  @ GasPricer 
_1:  @ u32 

[]
bb 0 {
CleanUp: false
    Assign((_0, GasPricer::Fixed(move _1))) @ _0=GasPricer::Fixed(move _1) @ Aggregate
    return @ Return
}

DefId(0:11 ~ dl_2_field[256e]::GasPricer::Calibrated::{constructor#0})
_0:  @ GasPricer 
_1:  @ u32 

[]
bb 0 {
CleanUp: false
    Assign((_0, GasPricer::Calibrated(move _1))) @ _0=GasPricer::Calibrated(move _1) @ Aggregate
    return @ Return
}


Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 1 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 1 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 5 }
  Out Labels:
    - Deref
  In Labels:
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 17 }
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 17 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 17 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 1 }
  Out Labels:
    - Field(0)
  In Labels:
    - Deref
  Successors:
    - Label: Field(0)
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Predecessors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 1 }

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 6 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 6 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 5 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 3 }
  Out Labels:
    - Deref
    - Guard
  In Labels:
    - Deref
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 19 }
    - Label: Guard
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Predecessors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 4 }

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 4 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 4 }
  Out Labels:
    - Deref
  In Labels:
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 6 }
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 14 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 14 }
  Out Labels:
    - Deref
  In Labels:
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 19 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 19 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 8 }
  Out Labels:
  In Labels:
    - Deref
  Successors:
  Predecessors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 6 }

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 13 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 13 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 12 }
  Out Labels:
    - Guard
  In Labels:
    - Deref
  Successors:
    - Label: Guard
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Predecessors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 11 }

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 15 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 15 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 9 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 9 }
    - Node ID: GraphNodeId { def_id: DefId(0:18 ~ dl_2_field[256e]::{impl#1}::recalibrate), index: 0 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(2:9865 ~ core[0c3f]::fmt::{impl#2}::new_const), index: 1 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(2:9865 ~ core[0c3f]::fmt::{impl#2}::new_const), index: 1 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 9 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 12 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 2 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 2 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 7 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 7 }
  Out Labels:
    - Deref
  In Labels:
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 18 }
  Out Labels:
  In Labels:
    - Deref
    - Field(0)
    - Guard
  Successors:
  Predecessors:
    - Label: Field(0)
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 17 }
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 7 }
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 14 }
    - Label: Guard
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 6 }
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 13 }

Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 11 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 11 }
    - Node ID: GraphNodeId { def_id: DefId(2:3113 ~ core[0c3f]::ops::deref::DerefMut::deref_mut), index: 1 }
  Out Labels:
    - Deref
  In Labels:
  Successors:
    - Label: Deref
      - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 13 }
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 2 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 2 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 10 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 10 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 7 }
    - Node ID: GraphNodeId { def_id: DefId(1:3326 ~ std[2f0b]::io::stdio::_print), index: 0 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 6 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 6 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 4 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 0 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 14 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 14 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 13 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 13 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(0:18 ~ dl_2_field[256e]::{impl#1}::recalibrate), index: 1 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(0:18 ~ dl_2_field[256e]::{impl#1}::recalibrate), index: 1 }
    - Node ID: GraphNodeId { def_id: DefId(0:16 ~ dl_2_field[256e]::{impl#0}::set_minimal_gas_price), index: 10 }
    - Node ID: GraphNodeId { def_id: DefId(2:3113 ~ core[0c3f]::ops::deref::DerefMut::deref_mut), index: 0 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors:

Node ID: GraphNodeId { def_id: DefId(1:3326 ~ std[2f0b]::io::stdio::_print), index: 1 }
  Alias Set:
    - Node ID: GraphNodeId { def_id: DefId(1:3326 ~ std[2f0b]::io::stdio::_print), index: 1 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 8 }
    - Node ID: GraphNodeId { def_id: DefId(0:19 ~ dl_2_field[256e]::main), index: 11 }
    - Node ID: GraphNodeId { def_id: DefId(2:9865 ~ core[0c3f]::fmt::{impl#2}::new_const), index: 0 }
  Out Labels:
  In Labels:
  Successors:
  Predecessors: