Show MIR
DefId(0:6 ~ t1[fdd8]::main)
_0:  @ () 
_1:  @ () 

[]
bb 0 {
CleanUp: false
    _1 = tt() -> [return: bb1, unwind continue] @ Call: FnDid: 7, args: []
}
bb 1 {
CleanUp: false
    return @ Return
}

DefId(0:7 ~ t1[fdd8]::tt)
_0:  @ () 
_1:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_2:  @ std::sync::Mutex<i32> 
_3:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_4:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_5:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_6:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_7:  @ std::sync::MutexGuard<ReErased, i32> 
_8:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_9:  @ &ReErased std::sync::Mutex<i32> 
_10:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_11:  @ std::sync::MutexGuard<ReErased, i32> 
_12:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_13:  @ &ReErased std::sync::Mutex<i32> 
_14:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_15:  @ std::sync::MutexGuard<ReErased, i32> 
_16:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_17:  @ &ReErased std::sync::Mutex<i32> 
_18:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 

[a => _1, b => _3, e => _5, c => _7, d => _11, f => _15]
bb 0 {
CleanUp: false
    _2 = std::sync::Mutex::<i32>::new(const 123_i32) -> [return: bb1, unwind continue] @ Call: FnDid: 6194, args: [i32]
}
bb 1 {
CleanUp: false
    _1 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _2) -> [return: bb2, unwind continue] @ Call: FnDid: 6025, args: [std::sync::Mutex<i32>]
}
bb 2 {
CleanUp: false
    Assign((_4, &_1)) @ _4=&_1 @ RefThe type is []
    _3 = <std::sync::Arc<std::sync::Mutex<i32>> as std::clone::Clone>::clone(move _4) -> [return: bb3, unwind: bb24] @ Call: FnDid: 2441, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 3 {
CleanUp: false
    Assign((_6, &_3)) @ _6=&_3 @ RefThe type is []
    _5 = <std::sync::Arc<std::sync::Mutex<i32>> as std::clone::Clone>::clone(move _6) -> [return: bb4, unwind: bb23] @ Call: FnDid: 2441, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 4 {
CleanUp: false
    Assign((_10, &_1)) @ _10=&_1 @ RefThe type is []
    _9 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _10) -> [return: bb5, unwind: bb22] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 5 {
CleanUp: false
    _8 = std::sync::Mutex::<i32>::lock(_9) -> [return: bb6, unwind: bb22] @ Call: FnDid: 6197, args: [i32]
}
bb 6 {
CleanUp: false
    _7 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _8) -> [return: bb7, unwind: bb22] @ Call: FnDid: 9204, args: [std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>]
}
bb 7 {
CleanUp: false
    Assign((_14, &_3)) @ _14=&_3 @ RefThe type is []
    _13 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _14) -> [return: bb8, unwind: bb21] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 8 {
CleanUp: false
    _12 = std::sync::Mutex::<i32>::lock(_13) -> [return: bb9, unwind: bb21] @ Call: FnDid: 6197, args: [i32]
}
bb 9 {
CleanUp: false
    _11 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _12) -> [return: bb10, unwind: bb21] @ Call: FnDid: 9204, args: [std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>]
}
bb 10 {
CleanUp: false
    Assign((_18, &_5)) @ _18=&_5 @ RefThe type is []
    _17 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _18) -> [return: bb11, unwind: bb20] @ Call: FnDid: 3101, args: [std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global>]
}
bb 11 {
CleanUp: false
    _16 = std::sync::Mutex::<i32>::lock(_17) -> [return: bb12, unwind: bb20] @ Call: FnDid: 6197, args: [i32]
}
bb 12 {
CleanUp: false
    _15 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _16) -> [return: bb13, unwind: bb20] @ Call: FnDid: 9204, args: [std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>]
}
bb 13 {
CleanUp: false
    drop(_15) -> [return: bb14, unwind: bb20] @ Drop
}
bb 14 {
CleanUp: false
    drop(_11) -> [return: bb15, unwind: bb21] @ Drop
}
bb 15 {
CleanUp: false
    drop(_7) -> [return: bb16, unwind: bb22] @ Drop
}
bb 16 {
CleanUp: false
    drop(_5) -> [return: bb17, unwind: bb23] @ Drop
}
bb 17 {
CleanUp: false
    drop(_3) -> [return: bb18, unwind: bb24] @ Drop
}
bb 18 {
CleanUp: false
    drop(_1) -> [return: bb19, unwind continue] @ Drop
}
bb 19 {
CleanUp: false
    return @ Return
}
bb 20 {
CleanUp: true
    drop(_11) -> [return: bb21, unwind terminate(cleanup)] @ Drop
}
bb 21 {
CleanUp: true
    drop(_7) -> [return: bb22, unwind terminate(cleanup)] @ Drop
}
bb 22 {
CleanUp: true
    drop(_5) -> [return: bb23, unwind terminate(cleanup)] @ Drop
}
bb 23 {
CleanUp: true
    drop(_3) -> [return: bb24, unwind terminate(cleanup)] @ Drop
}
bb 24 {
CleanUp: true
    drop(_1) -> [return: bb25, unwind terminate(cleanup)] @ Drop
}
bb 25 {
CleanUp: true
    resume @ UnwindResume
}

