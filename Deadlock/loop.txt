Show MIR
DefId(0:6 ~ loop[e2d5]::main)
_0:  @ () 
_1:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_2:  @ std::sync::Mutex<i32> 
_3:  @ std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_4:  @ std::sync::Mutex<i32> 
_5:  @ i32 
_6:  @ () 
_7:  @ std::ops::Range<i32> 
_8:  @ std::ops::Range<i32> 
_9:  @ i32 
_10:  @ std::ops::Range<i32> 
_11:  @ () 
_12:  @ () 
_13:  @ std::option::Option<i32> 
_14:  @ &ReErased mut std::ops::Range<i32> 
_15:  @ &ReErased mut std::ops::Range<i32> 
_16:  @ isize 
_17:  @ ! 
_18:  @ i32 
_19:  @ () 
_20:  @ std::sync::MutexGuard<ReErased, i32> 
_21:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_22:  @ &ReErased std::sync::Mutex<i32> 
_23:  @ &ReErased std::sync::Mutex<i32> 
_24:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_25:  @ i32 
_26:  @ &ReErased mut i32 
_27:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_28:  @ (i32, bool) 
_29:  @ () 
_30:  @ () 
_31:  @ std::fmt::Arguments<ReErased> 
_32:  @ &ReErased [&ReErased str] 
_33:  @ &ReErased [&ReErased str; 3_usize] 
_34:  @ &ReErased [&ReErased str; 3_usize] 
_35:  @ [&ReErased str; 3_usize] 
_36:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_37:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 2_usize] 
_38:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 2_usize] 
_39:  @ [core::fmt::rt::Argument<ReErased>; 2_usize] 
_40:  @ core::fmt::rt::Argument<ReErased> 
_41:  @ &ReErased i32 
_42:  @ &ReErased i32 
_43:  @ core::fmt::rt::Argument<ReErased> 
_44:  @ &ReErased i32 
_45:  @ &ReErased i32 
_46:  @ &ReErased i32 
_47:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_48:  @ std::sync::MutexGuard<ReErased, i32> 
_49:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_50:  @ &ReErased std::sync::Mutex<i32> 
_51:  @ &ReErased std::sync::Mutex<i32> 
_52:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_53:  @ i32 
_54:  @ i32 
_55:  @ (i32, bool) 
_56:  @ &ReErased mut i32 
_57:  @ &ReErased mut std::sync::MutexGuard<ReErased, i32> 
_58:  @ (i32, bool) 
_59:  @ () 
_60:  @ () 
_61:  @ std::fmt::Arguments<ReErased> 
_62:  @ &ReErased [&ReErased str] 
_63:  @ &ReErased [&ReErased str; 3_usize] 
_64:  @ &ReErased [&ReErased str; 3_usize] 
_65:  @ [&ReErased str; 3_usize] 
_66:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_67:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 2_usize] 
_68:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 2_usize] 
_69:  @ [core::fmt::rt::Argument<ReErased>; 2_usize] 
_70:  @ core::fmt::rt::Argument<ReErased> 
_71:  @ &ReErased i32 
_72:  @ &ReErased i32 
_73:  @ core::fmt::rt::Argument<ReErased> 
_74:  @ &ReErased i32 
_75:  @ &ReErased i32 
_76:  @ &ReErased i32 
_77:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_78:  @ i32 
_79:  @ &ReErased i32 
_80:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_81:  @ std::sync::MutexGuard<ReErased, i32> 
_82:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_83:  @ &ReErased std::sync::Mutex<i32> 
_84:  @ &ReErased std::sync::Mutex<i32> 
_85:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_86:  @ i32 
_87:  @ &ReErased i32 
_88:  @ &ReErased std::sync::MutexGuard<ReErased, i32> 
_89:  @ std::sync::MutexGuard<ReErased, i32> 
_90:  @ std::result::Result<std::sync::MutexGuard<ReErased, i32>, std::sync::PoisonError<std::sync::MutexGuard<ReErased, i32>>> 
_91:  @ &ReErased std::sync::Mutex<i32> 
_92:  @ &ReErased std::sync::Mutex<i32> 
_93:  @ &ReErased std::sync::Arc<std::sync::Mutex<i32>, std::alloc::Global> 
_94:  @ () 
_95:  @ () 
_96:  @ std::fmt::Arguments<ReErased> 
_97:  @ &ReErased [&ReErased str] 
_98:  @ &ReErased [&ReErased str; 2_usize] 
_99:  @ &ReErased [&ReErased str; 2_usize] 
_100:  @ [&ReErased str; 2_usize] 
_101:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_102:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_103:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_104:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_105:  @ core::fmt::rt::Argument<ReErased> 
_106:  @ &ReErased i32 
_107:  @ &ReErased i32 
_108:  @ () 
_109:  @ () 
_110:  @ std::fmt::Arguments<ReErased> 
_111:  @ &ReErased [&ReErased str] 
_112:  @ &ReErased [&ReErased str; 2_usize] 
_113:  @ &ReErased [&ReErased str; 2_usize] 
_114:  @ [&ReErased str; 2_usize] 
_115:  @ &ReErased [core::fmt::rt::Argument<ReErased>] 
_116:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_117:  @ &ReErased [core::fmt::rt::Argument<ReErased>; 1_usize] 
_118:  @ [core::fmt::rt::Argument<ReErased>; 1_usize] 
_119:  @ core::fmt::rt::Argument<ReErased> 
_120:  @ &ReErased i32 
_121:  @ &ReErased i32 

bb 0 {
CleanUp: false
    StorageLive(_1) @ StorageLive
    StorageLive(_2) @ StorageLive
    _2 = std::sync::Mutex::<i32>::new(const 0_i32) -> [return: bb1, unwind: bb69] @ Call: FnDid: 6372
}
bb 1 {
CleanUp: false
    _1 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _2) -> [return: bb2, unwind: bb69] @ Call: FnDid: 6025
}
bb 2 {
CleanUp: false
    StorageDead(_2) @ StorageDead
    FakeRead((ForLet(None), _1)) @ FakeRead
    StorageLive(_3) @ StorageLive
    StorageLive(_4) @ StorageLive
    _4 = std::sync::Mutex::<i32>::new(const 0_i32) -> [return: bb3, unwind: bb68] @ Call: FnDid: 6372
}
bb 3 {
CleanUp: false
    _3 = std::sync::Arc::<std::sync::Mutex<i32>>::new(move _4) -> [return: bb4, unwind: bb68] @ Call: FnDid: 6025
}
bb 4 {
CleanUp: false
    StorageDead(_4) @ StorageDead
    FakeRead((ForLet(None), _3)) @ FakeRead
    StorageLive(_5) @ StorageLive
    Assign((_5, const 5_i32)) @ _5=const 5_i32 @ Use
    FakeRead((ForLet(None), _5)) @ FakeRead
    StorageLive(_6) @ StorageLive
    StorageLive(_7) @ StorageLive
    StorageLive(_8) @ StorageLive
    StorageLive(_9) @ StorageLive
    Assign((_9, _5)) @ _9=_5 @ Use
    Assign((_8, std::ops::Range::<i32> { start: const 0_i32, end: move _9 })) @ _8=std::ops::Range::<i32> { start: const 0_i32, end: move _9 } @ Aggregate
    StorageDead(_9) @ StorageDead
    _7 = <std::ops::Range<i32> as std::iter::IntoIterator>::into_iter(move _8) -> [return: bb5, unwind: bb67] @ Call: FnDid: 7792
}
bb 5 {
CleanUp: false
    StorageDead(_8) @ StorageDead
    PlaceMention(_7) @ PlaceMention
    StorageLive(_10) @ StorageLive
    Assign((_10, move _7)) @ _10=move _7 @ Use
    goto -> bb6 @ Goto
}
bb 6 {
CleanUp: false
    falseUnwind -> [real: bb7, unwind: bb67] @ FalseUnwind
}
bb 7 {
CleanUp: false
    StorageLive(_12) @ StorageLive
    StorageLive(_13) @ StorageLive
    StorageLive(_14) @ StorageLive
    StorageLive(_15) @ StorageLive
    Assign((_15, &mut _10)) @ _15=&mut _10 @ Ref
    Assign((_14, &mut (*_15))) @ _14=&mut (*_15) @ Ref
    _13 = <std::ops::Range<i32> as std::iter::Iterator>::next(move _14) -> [return: bb8, unwind: bb67] @ Call: FnDid: 7938
}
bb 8 {
CleanUp: false
    StorageDead(_14) @ StorageDead
    PlaceMention(_13) @ PlaceMention
    Assign((_16, discriminant(_13))) @ _16=discriminant(_13) @ Discriminant
    switchInt(move _16) -> [0: bb9, 1: bb10, otherwise: bb11] @ SwitchInt
}
bb 9 {
CleanUp: false
    falseEdge -> [real: bb12, imaginary: bb10] @ FalseEdge
}
bb 10 {
CleanUp: false
    StorageLive(_18) @ StorageLive
    Assign((_18, ((_13 as Some).0: i32))) @ _18=((_13 as Some).0: i32) @ Use
    StorageLive(_19) @ StorageLive
    StorageLive(_20) @ StorageLive
    StorageLive(_21) @ StorageLive
    StorageLive(_22) @ StorageLive
    StorageLive(_23) @ StorageLive
    StorageLive(_24) @ StorageLive
    Assign((_24, &_1)) @ _24=&_1 @ Ref
    _23 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _24) -> [return: bb15, unwind: bb67] @ Call: FnDid: 3101
}
bb 11 {
CleanUp: false
    FakeRead((ForMatchedPlace(None), _13)) @ FakeRead
    unreachable @ Unreachable
}
bb 12 {
CleanUp: false
    Assign((_6, const ())) @ _6=const () @ Use
    goto -> bb39 @ Goto
}
bb 13 {
CleanUp: false
    unreachable @ Unreachable
}
bb 14 {
CleanUp: false
    goto -> bb38 @ Goto
}
bb 15 {
CleanUp: false
    Assign((_22, &(*_23))) @ _22=&(*_23) @ Ref
    StorageDead(_24) @ StorageDead
    _21 = std::sync::Mutex::<i32>::lock(move _22) -> [return: bb16, unwind: bb67] @ Call: FnDid: 6375
}
bb 16 {
CleanUp: false
    StorageDead(_22) @ StorageDead
    _20 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _21) -> [return: bb17, unwind: bb66] @ Call: FnDid: 9195
}
bb 17 {
CleanUp: false
    StorageDead(_21) @ StorageDead
    FakeRead((ForLet(None), _20)) @ FakeRead
    StorageDead(_23) @ StorageDead
    StorageLive(_25) @ StorageLive
    Assign((_25, _18)) @ _25=_18 @ Use
    StorageLive(_26) @ StorageLive
    StorageLive(_27) @ StorageLive
    Assign((_27, &mut _20)) @ _27=&mut _20 @ Ref
    _26 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _27) -> [return: bb18, unwind: bb65] @ Call: FnDid: 3113
}
bb 18 {
CleanUp: false
    StorageDead(_27) @ StorageDead
    Assign((_28, CheckedAdd((*_26), _25))) @ _28=CheckedAdd((*_26), _25) @ CheckedBinaryOp
    assert(!move (_28.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_26), move _25) -> [success: bb19, unwind: bb65] @ Assert
}
bb 19 {
CleanUp: false
    Assign(((*_26), move (_28.0: i32))) @ (*_26)=move (_28.0: i32) @ Use
    StorageDead(_25) @ StorageDead
    StorageDead(_26) @ StorageDead
    StorageLive(_29) @ StorageLive
    StorageLive(_30) @ StorageLive
    StorageLive(_31) @ StorageLive
    StorageLive(_32) @ StorageLive
    StorageLive(_33) @ StorageLive
    StorageLive(_34) @ StorageLive
    StorageLive(_35) @ StorageLive
    Assign((_35, [const "Iteration ", const ": counter1 is now ", const "\n"])) @ _35=[const "Iteration ", const ": counter1 is now ", const "\n"] @ Aggregate
    Assign((_34, &_35)) @ _34=&_35 @ Ref
    Assign((_33, &(*_34))) @ _33=&(*_34) @ Ref
    Assign((_32, move _33 as &[&str] (PointerCoercion(Unsize)))) @ _32=move _33 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_33) @ StorageDead
    StorageLive(_36) @ StorageLive
    StorageLive(_37) @ StorageLive
    StorageLive(_38) @ StorageLive
    StorageLive(_39) @ StorageLive
    StorageLive(_40) @ StorageLive
    StorageLive(_41) @ StorageLive
    StorageLive(_42) @ StorageLive
    Assign((_42, &_18)) @ _42=&_18 @ Ref
    Assign((_41, &(*_42))) @ _41=&(*_42) @ Ref
    _40 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _41) -> [return: bb20, unwind: bb65] @ Call: FnDid: 9786
}
bb 20 {
CleanUp: false
    StorageDead(_41) @ StorageDead
    StorageLive(_43) @ StorageLive
    StorageLive(_44) @ StorageLive
    StorageLive(_45) @ StorageLive
    StorageLive(_46) @ StorageLive
    StorageLive(_47) @ StorageLive
    Assign((_47, &_20)) @ _47=&_20 @ Ref
    _46 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _47) -> [return: bb21, unwind: bb65] @ Call: FnDid: 3101
}
bb 21 {
CleanUp: false
    StorageDead(_47) @ StorageDead
    Assign((_45, &(*_46))) @ _45=&(*_46) @ Ref
    Assign((_44, &(*_45))) @ _44=&(*_45) @ Ref
    _43 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _44) -> [return: bb22, unwind: bb65] @ Call: FnDid: 9786
}
bb 22 {
CleanUp: false
    StorageDead(_44) @ StorageDead
    Assign((_39, [move _40, move _43])) @ _39=[move _40, move _43] @ Aggregate
    StorageDead(_43) @ StorageDead
    StorageDead(_40) @ StorageDead
    Assign((_38, &_39)) @ _38=&_39 @ Ref
    Assign((_37, &(*_38))) @ _37=&(*_38) @ Ref
    Assign((_36, move _37 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _36=move _37 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_37) @ StorageDead
    _31 = std::fmt::Arguments::<'_>::new_v1(move _32, move _36) -> [return: bb23, unwind: bb65] @ Call: FnDid: 9866
}
bb 23 {
CleanUp: false
    StorageDead(_36) @ StorageDead
    StorageDead(_32) @ StorageDead
    _30 = std::io::_print(move _31) -> [return: bb24, unwind: bb65] @ Call: FnDid: 3326
}
bb 24 {
CleanUp: false
    StorageDead(_31) @ StorageDead
    StorageDead(_46) @ StorageDead
    StorageDead(_45) @ StorageDead
    StorageDead(_42) @ StorageDead
    StorageDead(_39) @ StorageDead
    StorageDead(_38) @ StorageDead
    StorageDead(_35) @ StorageDead
    StorageDead(_34) @ StorageDead
    StorageDead(_30) @ StorageDead
    Assign((_29, const ())) @ _29=const () @ Use
    StorageDead(_29) @ StorageDead
    Assign((_19, const ())) @ _19=const () @ Use
    drop(_20) -> [return: bb25, unwind: bb67] @ Drop
}
bb 25 {
CleanUp: false
    StorageDead(_20) @ StorageDead
    StorageDead(_19) @ StorageDead
    StorageLive(_48) @ StorageLive
    StorageLive(_49) @ StorageLive
    StorageLive(_50) @ StorageLive
    StorageLive(_51) @ StorageLive
    StorageLive(_52) @ StorageLive
    Assign((_52, &_3)) @ _52=&_3 @ Ref
    _51 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _52) -> [return: bb26, unwind: bb67] @ Call: FnDid: 3101
}
bb 26 {
CleanUp: false
    Assign((_50, &(*_51))) @ _50=&(*_51) @ Ref
    StorageDead(_52) @ StorageDead
    _49 = std::sync::Mutex::<i32>::lock(move _50) -> [return: bb27, unwind: bb67] @ Call: FnDid: 6375
}
bb 27 {
CleanUp: false
    StorageDead(_50) @ StorageDead
    _48 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _49) -> [return: bb28, unwind: bb64] @ Call: FnDid: 9195
}
bb 28 {
CleanUp: false
    StorageDead(_49) @ StorageDead
    FakeRead((ForLet(None), _48)) @ FakeRead
    StorageDead(_51) @ StorageDead
    StorageLive(_53) @ StorageLive
    StorageLive(_54) @ StorageLive
    Assign((_54, _18)) @ _54=_18 @ Use
    Assign((_55, CheckedMul(const 2_i32, _54))) @ _55=CheckedMul(const 2_i32, _54) @ CheckedBinaryOp
    assert(!move (_55.1: bool), "attempt to compute `{} * {}`, which would overflow", const 2_i32, move _54) -> [success: bb29, unwind: bb63] @ Assert
}
bb 29 {
CleanUp: false
    Assign((_53, move (_55.0: i32))) @ _53=move (_55.0: i32) @ Use
    StorageDead(_54) @ StorageDead
    StorageLive(_56) @ StorageLive
    StorageLive(_57) @ StorageLive
    Assign((_57, &mut _48)) @ _57=&mut _48 @ Ref
    _56 = <std::sync::MutexGuard<'_, i32> as std::ops::DerefMut>::deref_mut(move _57) -> [return: bb30, unwind: bb63] @ Call: FnDid: 3113
}
bb 30 {
CleanUp: false
    StorageDead(_57) @ StorageDead
    Assign((_58, CheckedAdd((*_56), _53))) @ _58=CheckedAdd((*_56), _53) @ CheckedBinaryOp
    assert(!move (_58.1: bool), "attempt to compute `{} + {}`, which would overflow", (*_56), move _53) -> [success: bb31, unwind: bb63] @ Assert
}
bb 31 {
CleanUp: false
    Assign(((*_56), move (_58.0: i32))) @ (*_56)=move (_58.0: i32) @ Use
    StorageDead(_53) @ StorageDead
    StorageDead(_56) @ StorageDead
    StorageLive(_59) @ StorageLive
    StorageLive(_60) @ StorageLive
    StorageLive(_61) @ StorageLive
    StorageLive(_62) @ StorageLive
    StorageLive(_63) @ StorageLive
    StorageLive(_64) @ StorageLive
    StorageLive(_65) @ StorageLive
    Assign((_65, [const "Iteration ", const ": counter2 is now ", const "\n"])) @ _65=[const "Iteration ", const ": counter2 is now ", const "\n"] @ Aggregate
    Assign((_64, &_65)) @ _64=&_65 @ Ref
    Assign((_63, &(*_64))) @ _63=&(*_64) @ Ref
    Assign((_62, move _63 as &[&str] (PointerCoercion(Unsize)))) @ _62=move _63 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_63) @ StorageDead
    StorageLive(_66) @ StorageLive
    StorageLive(_67) @ StorageLive
    StorageLive(_68) @ StorageLive
    StorageLive(_69) @ StorageLive
    StorageLive(_70) @ StorageLive
    StorageLive(_71) @ StorageLive
    StorageLive(_72) @ StorageLive
    Assign((_72, &_18)) @ _72=&_18 @ Ref
    Assign((_71, &(*_72))) @ _71=&(*_72) @ Ref
    _70 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _71) -> [return: bb32, unwind: bb63] @ Call: FnDid: 9786
}
bb 32 {
CleanUp: false
    StorageDead(_71) @ StorageDead
    StorageLive(_73) @ StorageLive
    StorageLive(_74) @ StorageLive
    StorageLive(_75) @ StorageLive
    StorageLive(_76) @ StorageLive
    StorageLive(_77) @ StorageLive
    Assign((_77, &_48)) @ _77=&_48 @ Ref
    _76 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _77) -> [return: bb33, unwind: bb63] @ Call: FnDid: 3101
}
bb 33 {
CleanUp: false
    StorageDead(_77) @ StorageDead
    Assign((_75, &(*_76))) @ _75=&(*_76) @ Ref
    Assign((_74, &(*_75))) @ _74=&(*_75) @ Ref
    _73 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _74) -> [return: bb34, unwind: bb63] @ Call: FnDid: 9786
}
bb 34 {
CleanUp: false
    StorageDead(_74) @ StorageDead
    Assign((_69, [move _70, move _73])) @ _69=[move _70, move _73] @ Aggregate
    StorageDead(_73) @ StorageDead
    StorageDead(_70) @ StorageDead
    Assign((_68, &_69)) @ _68=&_69 @ Ref
    Assign((_67, &(*_68))) @ _67=&(*_68) @ Ref
    Assign((_66, move _67 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _66=move _67 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_67) @ StorageDead
    _61 = std::fmt::Arguments::<'_>::new_v1(move _62, move _66) -> [return: bb35, unwind: bb63] @ Call: FnDid: 9866
}
bb 35 {
CleanUp: false
    StorageDead(_66) @ StorageDead
    StorageDead(_62) @ StorageDead
    _60 = std::io::_print(move _61) -> [return: bb36, unwind: bb63] @ Call: FnDid: 3326
}
bb 36 {
CleanUp: false
    StorageDead(_61) @ StorageDead
    StorageDead(_76) @ StorageDead
    StorageDead(_75) @ StorageDead
    StorageDead(_72) @ StorageDead
    StorageDead(_69) @ StorageDead
    StorageDead(_68) @ StorageDead
    StorageDead(_65) @ StorageDead
    StorageDead(_64) @ StorageDead
    StorageDead(_60) @ StorageDead
    Assign((_59, const ())) @ _59=const () @ Use
    StorageDead(_59) @ StorageDead
    Assign((_12, const ())) @ _12=const () @ Use
    drop(_48) -> [return: bb37, unwind: bb67] @ Drop
}
bb 37 {
CleanUp: false
    StorageDead(_48) @ StorageDead
    StorageDead(_18) @ StorageDead
    goto -> bb38 @ Goto
}
bb 38 {
CleanUp: false
    StorageDead(_15) @ StorageDead
    StorageDead(_13) @ StorageDead
    StorageDead(_12) @ StorageDead
    Assign((_11, const ())) @ _11=const () @ Use
    goto -> bb6 @ Goto
}
bb 39 {
CleanUp: false
    StorageDead(_15) @ StorageDead
    StorageDead(_13) @ StorageDead
    StorageDead(_12) @ StorageDead
    StorageDead(_10) @ StorageDead
    goto -> bb40 @ Goto
}
bb 40 {
CleanUp: false
    StorageDead(_7) @ StorageDead
    StorageDead(_6) @ StorageDead
    StorageLive(_78) @ StorageLive
    StorageLive(_79) @ StorageLive
    StorageLive(_80) @ StorageLive
    StorageLive(_81) @ StorageLive
    StorageLive(_82) @ StorageLive
    StorageLive(_83) @ StorageLive
    StorageLive(_84) @ StorageLive
    StorageLive(_85) @ StorageLive
    Assign((_85, &_1)) @ _85=&_1 @ Ref
    _84 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _85) -> [return: bb41, unwind: bb67] @ Call: FnDid: 3101
}
bb 41 {
CleanUp: false
    Assign((_83, &(*_84))) @ _83=&(*_84) @ Ref
    StorageDead(_85) @ StorageDead
    _82 = std::sync::Mutex::<i32>::lock(move _83) -> [return: bb42, unwind: bb67] @ Call: FnDid: 6375
}
bb 42 {
CleanUp: false
    StorageDead(_83) @ StorageDead
    _81 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _82) -> [return: bb43, unwind: bb62] @ Call: FnDid: 9195
}
bb 43 {
CleanUp: false
    Assign((_80, &_81)) @ _80=&_81 @ Ref
    StorageDead(_82) @ StorageDead
    _79 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _80) -> [return: bb44, unwind: bb61] @ Call: FnDid: 3101
}
bb 44 {
CleanUp: false
    Assign((_78, (*_79))) @ _78=(*_79) @ Use
    StorageDead(_80) @ StorageDead
    FakeRead((ForLet(None), _78)) @ FakeRead
    drop(_81) -> [return: bb45, unwind: bb67] @ Drop
}
bb 45 {
CleanUp: false
    StorageDead(_84) @ StorageDead
    StorageDead(_81) @ StorageDead
    StorageDead(_79) @ StorageDead
    StorageLive(_86) @ StorageLive
    StorageLive(_87) @ StorageLive
    StorageLive(_88) @ StorageLive
    StorageLive(_89) @ StorageLive
    StorageLive(_90) @ StorageLive
    StorageLive(_91) @ StorageLive
    StorageLive(_92) @ StorageLive
    StorageLive(_93) @ StorageLive
    Assign((_93, &_3)) @ _93=&_3 @ Ref
    _92 = <std::sync::Arc<std::sync::Mutex<i32>> as std::ops::Deref>::deref(move _93) -> [return: bb46, unwind: bb67] @ Call: FnDid: 3101
}
bb 46 {
CleanUp: false
    Assign((_91, &(*_92))) @ _91=&(*_92) @ Ref
    StorageDead(_93) @ StorageDead
    _90 = std::sync::Mutex::<i32>::lock(move _91) -> [return: bb47, unwind: bb67] @ Call: FnDid: 6375
}
bb 47 {
CleanUp: false
    StorageDead(_91) @ StorageDead
    _89 = std::result::Result::<std::sync::MutexGuard<'_, i32>, std::sync::PoisonError<std::sync::MutexGuard<'_, i32>>>::unwrap(move _90) -> [return: bb48, unwind: bb60] @ Call: FnDid: 9195
}
bb 48 {
CleanUp: false
    Assign((_88, &_89)) @ _88=&_89 @ Ref
    StorageDead(_90) @ StorageDead
    _87 = <std::sync::MutexGuard<'_, i32> as std::ops::Deref>::deref(move _88) -> [return: bb49, unwind: bb59] @ Call: FnDid: 3101
}
bb 49 {
CleanUp: false
    Assign((_86, (*_87))) @ _86=(*_87) @ Use
    StorageDead(_88) @ StorageDead
    FakeRead((ForLet(None), _86)) @ FakeRead
    drop(_89) -> [return: bb50, unwind: bb67] @ Drop
}
bb 50 {
CleanUp: false
    StorageDead(_92) @ StorageDead
    StorageDead(_89) @ StorageDead
    StorageDead(_87) @ StorageDead
    StorageLive(_94) @ StorageLive
    StorageLive(_95) @ StorageLive
    StorageLive(_96) @ StorageLive
    StorageLive(_97) @ StorageLive
    StorageLive(_98) @ StorageLive
    StorageLive(_99) @ StorageLive
    StorageLive(_100) @ StorageLive
    Assign((_100, [const "Final count1: ", const "\n"])) @ _100=[const "Final count1: ", const "\n"] @ Aggregate
    Assign((_99, &_100)) @ _99=&_100 @ Ref
    Assign((_98, &(*_99))) @ _98=&(*_99) @ Ref
    Assign((_97, move _98 as &[&str] (PointerCoercion(Unsize)))) @ _97=move _98 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_98) @ StorageDead
    StorageLive(_101) @ StorageLive
    StorageLive(_102) @ StorageLive
    StorageLive(_103) @ StorageLive
    StorageLive(_104) @ StorageLive
    StorageLive(_105) @ StorageLive
    StorageLive(_106) @ StorageLive
    StorageLive(_107) @ StorageLive
    Assign((_107, &_78)) @ _107=&_78 @ Ref
    Assign((_106, &(*_107))) @ _106=&(*_107) @ Ref
    _105 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _106) -> [return: bb51, unwind: bb67] @ Call: FnDid: 9786
}
bb 51 {
CleanUp: false
    StorageDead(_106) @ StorageDead
    Assign((_104, [move _105])) @ _104=[move _105] @ Aggregate
    StorageDead(_105) @ StorageDead
    Assign((_103, &_104)) @ _103=&_104 @ Ref
    Assign((_102, &(*_103))) @ _102=&(*_103) @ Ref
    Assign((_101, move _102 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _101=move _102 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_102) @ StorageDead
    _96 = std::fmt::Arguments::<'_>::new_v1(move _97, move _101) -> [return: bb52, unwind: bb67] @ Call: FnDid: 9866
}
bb 52 {
CleanUp: false
    StorageDead(_101) @ StorageDead
    StorageDead(_97) @ StorageDead
    _95 = std::io::_print(move _96) -> [return: bb53, unwind: bb67] @ Call: FnDid: 3326
}
bb 53 {
CleanUp: false
    StorageDead(_96) @ StorageDead
    StorageDead(_107) @ StorageDead
    StorageDead(_104) @ StorageDead
    StorageDead(_103) @ StorageDead
    StorageDead(_100) @ StorageDead
    StorageDead(_99) @ StorageDead
    StorageDead(_95) @ StorageDead
    Assign((_94, const ())) @ _94=const () @ Use
    StorageDead(_94) @ StorageDead
    StorageLive(_108) @ StorageLive
    StorageLive(_109) @ StorageLive
    StorageLive(_110) @ StorageLive
    StorageLive(_111) @ StorageLive
    StorageLive(_112) @ StorageLive
    StorageLive(_113) @ StorageLive
    StorageLive(_114) @ StorageLive
    Assign((_114, [const "Final count2: ", const "\n"])) @ _114=[const "Final count2: ", const "\n"] @ Aggregate
    Assign((_113, &_114)) @ _113=&_114 @ Ref
    Assign((_112, &(*_113))) @ _112=&(*_113) @ Ref
    Assign((_111, move _112 as &[&str] (PointerCoercion(Unsize)))) @ _111=move _112 as &[&str] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_112) @ StorageDead
    StorageLive(_115) @ StorageLive
    StorageLive(_116) @ StorageLive
    StorageLive(_117) @ StorageLive
    StorageLive(_118) @ StorageLive
    StorageLive(_119) @ StorageLive
    StorageLive(_120) @ StorageLive
    StorageLive(_121) @ StorageLive
    Assign((_121, &_86)) @ _121=&_86 @ Ref
    Assign((_120, &(*_121))) @ _120=&(*_121) @ Ref
    _119 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _120) -> [return: bb54, unwind: bb67] @ Call: FnDid: 9786
}
bb 54 {
CleanUp: false
    StorageDead(_120) @ StorageDead
    Assign((_118, [move _119])) @ _118=[move _119] @ Aggregate
    StorageDead(_119) @ StorageDead
    Assign((_117, &_118)) @ _117=&_118 @ Ref
    Assign((_116, &(*_117))) @ _116=&(*_117) @ Ref
    Assign((_115, move _116 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)))) @ _115=move _116 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)) @ Cast
    StorageDead(_116) @ StorageDead
    _110 = std::fmt::Arguments::<'_>::new_v1(move _111, move _115) -> [return: bb55, unwind: bb67] @ Call: FnDid: 9866
}
bb 55 {
CleanUp: false
    StorageDead(_115) @ StorageDead
    StorageDead(_111) @ StorageDead
    _109 = std::io::_print(move _110) -> [return: bb56, unwind: bb67] @ Call: FnDid: 3326
}
bb 56 {
CleanUp: false
    StorageDead(_110) @ StorageDead
    StorageDead(_121) @ StorageDead
    StorageDead(_118) @ StorageDead
    StorageDead(_117) @ StorageDead
    StorageDead(_114) @ StorageDead
    StorageDead(_113) @ StorageDead
    StorageDead(_109) @ StorageDead
    Assign((_108, const ())) @ _108=const () @ Use
    StorageDead(_108) @ StorageDead
    Assign((_0, const ())) @ _0=const () @ Use
    StorageDead(_86) @ StorageDead
    StorageDead(_78) @ StorageDead
    StorageDead(_5) @ StorageDead
    drop(_3) -> [return: bb57, unwind: bb68] @ Drop
}
bb 57 {
CleanUp: false
    StorageDead(_3) @ StorageDead
    drop(_1) -> [return: bb58, unwind: bb69] @ Drop
}
bb 58 {
CleanUp: false
    StorageDead(_1) @ StorageDead
    return @ Return
}
bb 59 {
CleanUp: true
    drop(_89) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 60 {
CleanUp: true
    drop(_90) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 61 {
CleanUp: true
    drop(_81) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 62 {
CleanUp: true
    drop(_82) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 63 {
CleanUp: true
    drop(_48) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 64 {
CleanUp: true
    drop(_49) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 65 {
CleanUp: true
    drop(_20) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 66 {
CleanUp: true
    drop(_21) -> [return: bb67, unwind terminate(cleanup)] @ Drop
}
bb 67 {
CleanUp: true
    drop(_3) -> [return: bb68, unwind terminate(cleanup)] @ Drop
}
bb 68 {
CleanUp: true
    drop(_1) -> [return: bb69, unwind terminate(cleanup)] @ Drop
}
bb 69 {
CleanUp: true
    resume @ UnwindResume
}

